# run nginx in foreground
daemon off;

error_log /tmp/logs/nginx-error.log warn;
pid /tmp/nginx/nginx.pid;

worker_processes  auto;
events {
    worker_connections  4096;
}

http {
  client_body_temp_path /tmp/nginx/client_body;
  fastcgi_temp_path /tmp/nginx/fastcgi_temp;
  proxy_temp_path /tmp/nginx/proxy_temp;
  scgi_temp_path /tmp/nginx/scgi_temp;
  uwsgi_temp_path /tmp/nginx/uwsgi_temp;

  sendfile on;
  gzip on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 2G;

  include    /etc/nginx/mime.types;
  include    /etc/nginx/fastcgi.conf;

  default_type application/octet-stream;

  ## This log format makes it so we can see real requester's IP address \
  ##    not just the reverse proxy server's IP address. Also note, that \
  ##    "customLog" can be replaced with any name you would like to \
  ##    give to this log format.
  log_format customLog '$remote_addr forwarded for $http_x_real_ip - $remote_user [$time_local]  '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

  server {

    #listen       [::]:80; #uncomment for IPv6 support
    listen       8080;

    root ${APP_ROOT};
    index  index.php index.html index.htm;
    access_log /tmp/logs/access.log customLog;
    error_log /tmp/logs/error.log;

    disable_symlinks off;

    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }

    # deny dot-files
    location ~ /\. {
      deny all;
      access_log off;
      log_not_found off;
    }

    location / {
      try_files $uri $uri/ /index.php?$args;
    }

    # Deny access to any files with a .php extension in the uploads and assets directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|assets)/.*\.php$ {
    	deny all;
    }

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        access_log        off;
        log_not_found     off;
        expires           360d;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    location ~ [^/]\.php(/|$) {
      fastcgi_split_path_info ^(.+?\.php)(/.*)$;
      if (!-f $document_root$fastcgi_script_name) {
        return 404;
      }
      fastcgi_pass 127.0.0.1:9000;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }
  }
}
